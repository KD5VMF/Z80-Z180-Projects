10 ' === LED MATH LAB b 10 Patterns + Cycle Mode (MBASIC-80 Rev 5.21) ===
20 ' SC7xx LEDs on I/O port (edit LEDPORT if needed)
30 LEDPORT = &H0
40 RANDOMIZE
50 DIM P(7) : P(0)=1: FOR I=1 TO 7: P(I)=P(I-1)*2: NEXT I
60 PRINT "LED MATH LAB  b  SC7xx LEDs on port &H00 (edit line 30 for yours)"
70 PRINT "Delay is a rough speed control (bigger = slower). Q quits a mode."
80 PRINT
90 INPUT "Delay (try 500)"; DEL: IF DEL<1 THEN DEL=1
100 PRINT
110 PRINT "Modes:"
120 PRINT "  0) Cycle through ALL patterns (repeat)"
130 PRINT "  1) LFSR-8       (max-length pseudo-random, 255-cycle)"
140 PRINT "  2) Rule-30      (1-D cellular automaton, 8-bit ring)"
150 PRINT "  3) Logistic     (x->4x*(1-x), fixed-point 0..255)"
160 PRINT "  4) Counter      (binary counter 0..255 wrap)"
170 PRINT "  5) RotRing      (rotating one-hot ring)"
180 PRINT "  6) KITT         (bouncing one-hot scanner)"
190 PRINT "  7) Sparkle      (decay + random spark bits)"
200 PRINT "  8) Rule-110     (CA rule 110, 8-bit ring)"
210 PRINT "  9) BitReverse   (counter with bit-reversed display)"
220 PRINT " 10) DualRing     (two one-hot rings, opposite directions)"
230 PRINT
240 INPUT "Choose mode (0-10)"; M
250 IF M<0 OR M>10 THEN PRINT "Select 0..10": GOTO 240
260 QF=0
270 IF M=0 THEN GOSUB 900 : GOTO 240
280 IF M=1 THEN GOSUB 1000 : GOTO 240
290 IF M=2 THEN GOSUB 2000 : GOTO 240
300 IF M=3 THEN GOSUB 3000 : GOTO 240
310 IF M=4 THEN GOSUB 4000 : GOTO 240
320 IF M=5 THEN GOSUB 5000 : GOTO 240
330 IF M=6 THEN GOSUB 6000 : GOTO 240
340 IF M=7 THEN GOSUB 7000 : GOTO 240
350 IF M=8 THEN GOSUB 8000 : GOTO 240
360 IF M=9 THEN GOSUB 9000 : GOTO 240
370 IF M=10 THEN GOSUB 10000 : GOTO 240
800 REM delay helper
810 FOR D=1 TO DEL: NEXT D: RETURN
820 REM read key, set QF if Q
830 A$=INKEY$: IF A$="Q" OR A$="q" THEN QF=1
840 RETURN
900 PRINT : PRINT "Cycle ALL patterns. Q to stop cycle and return to menu."
910 INPUT "Steps per pattern (default 256, 0=256)"; STEPS
920 IF STEPS<=0 THEN STEPS=256
930 FOR LOOP=1 TO 999999!
940   FOR MODEX=1 TO 10
950     QF=0: GOSUB 9500: IF QF THEN RETURN
960     ON MODEX GOSUB 1000,2000,3000,4000,5000,6000,7000,8000,9000,10000
970     IF QF THEN RETURN
980   NEXT MODEX
990 NEXT LOOP
995 RETURN
1000 PRINT : PRINT "1) LFSR-8  b Q to quit"
1010 S=1: IF S=0 THEN S=1
1020 B0 = S - 2*INT(S/2)
1030 T = INT(S/4): B2 = T - 2*INT(T/2)
1040 T = INT(S/8): B3 = T - 2*INT(T/2)
1050 T = INT(S/16): B4 = T - 2*INT(T/2)
1060 FB = B0+B2+B3+B4: FB = FB - 2*INT(FB/2)
1070 S = INT(S/2) + 128*FB
1080 OUT LEDPORT, S
1090 GOSUB 800: GOSUB 820: IF QF THEN RETURN
1100 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
1110 GOTO 1020
2000 PRINT : PRINT "2) Rule-30 CA  b Q to quit"
2010 W = 16 ' 00010000 seed
2020 NEXTW=0
2030 FOR I=0 TO 7
2040 T=INT(W/P(I)): SBIT=T-2*INT(T/2)
2050 LI=I+1: IF LI=8 THEN LI=0
2060 T=INT(W/P(LI)): LBIT=T-2*INT(T/2)
2070 RI=I-1: IF RI<0 THEN RI=7
2080 T=INT(W/P(RI)): RBIT=T-2*INT(T/2)
2090 OR1=SBIT+RBIT: IF OR1>0 THEN OR1=1
2100 NB=LBIT+OR1: NB=NB-2*INT(NB/2) ' left XOR (self OR right)
2110 NEXTW=NEXTW + NB*P(I)
2120 NEXT I
2130 W=NEXTW
2140 OUT LEDPORT, W
2150 GOSUB 800: GOSUB 820: IF QF THEN RETURN
2160 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
2170 GOTO 2020
3000 PRINT : PRINT "3) Logistic map  b Q to quit"
3010 X = 1 + INT(RND*255) ' random seed
3020 X = INT( (4 * X * (255 - X)) / 255 )
3030 IF X<0 THEN X=0
3040 IF X>255 THEN X=255
3050 OUT LEDPORT, X
3060 GOSUB 800: GOSUB 820: IF QF THEN RETURN
3070 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
3080 GOTO 3020
4000 PRINT : PRINT "4) Counter  b Q to quit"
4010 V=0
4020 OUT LEDPORT, V
4030 GOSUB 800: GOSUB 820: IF QF THEN RETURN
4040 V=V+1: IF V=256 THEN V=0
4050 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
4060 GOTO 4020
5000 PRINT : PRINT "5) RotRing  b Q to quit"
5010 V=1
5020 OUT LEDPORT, V
5030 GOSUB 800: GOSUB 820: IF QF THEN RETURN
5040 V=V*2: IF V>255 THEN V=1
5050 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
5060 GOTO 5020
6000 PRINT : PRINT "6) KITT  -- Q to quit"
6010 KP=0: DR=1
6020 V=P(KP)
6030 OUT LEDPORT, V
6040 GOSUB 800: GOSUB 820: IF QF THEN RETURN
6050 KP=KP+DR
6060 IF KP>=7 THEN KP=7: DR=-1
6070 IF KP<=0 THEN KP=0: DR=1
6080 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
6090 GOTO 6020
7000 PRINT : PRINT "7) Sparkle  b Q to quit"
7010 W=0
7020 W=INT(W/2) ' decay (shift right)
7030 IF RND>.66 THEN K=INT(RND*8): T=INT(W/P(K)): B=T-2*INT(T/2): IF B=0 THEN W=
W+P(K)
7040 IF W>255 THEN W=255
7050 OUT LEDPORT, W
7060 GOSUB 800: GOSUB 820: IF QF THEN RETURN
7070 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
7080 GOTO 7020
8000 PRINT : PRINT "8) GrayCode  b single-bit transitions  b  Q to quit"
8010 T=0
8015 IF W=0 THEN W=1
8020 ' Build Gray = T XOR (T>>1) without XOR, bit-by-bit (mod 2)
8030 G=0
8040 FOR I=0 TO 7
8050 TT=INT(T/P(I)): B = TT - 2*INT(TT/2)          ' bit i of T
8060 IF I<7 THEN TT=INT(T/P(I+1)): B2 = TT - 2*INT(TT/2) ELSE B2=0  ' bit i+1 of
 T
8070 X = B + B2: X = X - 2*INT(X/2)                 ' XOR via sum mod 2
8080 G = G + X * P(I)
8090 NEXT I
8100 OUT LEDPORT, G
8105 IF CODE=0 OR CODE=4 OR CODE=7 THEN NB=0  ' Rule 110 table
8110 GOSUB 800: GOSUB 820: IF QF THEN RETURN
8120 T = T + 1: IF T=256 THEN T=0
8130 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
8140 GOTO 8030
8150 OUT LEDPORT, W
8160 GOSUB 800: GOSUB 820: IF QF THEN RETURN
8170 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
8180 GOTO 8020
9000 PRINT : PRINT "9) BitReverse  b Q to quit"
9010 T=0
9020 ' build W = bit reverse of T
9030 W=0
9040 FOR I=0 TO 7
9050 TT=INT(T/P(I)): B=TT-2*INT(TT/2)
9060 J=7-I
9070 W=W + B*P(J)
9080 NEXT I
9090 OUT LEDPORT, W
9100 GOSUB 800: GOSUB 820: IF QF THEN RETURN
9110 T=T+1: IF T=256 THEN T=0
9120 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
9130 GOTO 9030
9500 CSTEP=0: RETURN
10000 PRINT : PRINT "10) DualRing  b Q to quit"
10010 POS1=0: POS2=7
10020 V = P(POS1) + P(POS2)
10030 OUT LEDPORT, V
10040 GOSUB 800: GOSUB 820: IF QF THEN RETURN
10050 POS1=POS1+1: IF POS1>7 THEN POS1=0
10060 POS2=POS2-1: IF POS2<0 THEN POS2=7
10070 IF M=0 THEN CSTEP=CSTEP+1: IF CSTEP>=STEPS THEN RETURN
10080 GOTO 10020
